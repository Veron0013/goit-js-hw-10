{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet userSelectedDate = -1;\nlet timerId;\nlet intervalId;\n\nconst btnStart = document.querySelector(\".button.start\");\nconst btnStop = document.querySelector(\".button.stop\");\nconst inputField = document.querySelector(\".input_field\");\nconst timerCounter = document.querySelectorAll(\".value\");\n\nconst classTypes = [\"normal\", \"disabled\"];\n\nconst options = {\n\tenableTime: true,\n\ttime_24hr: true,\n\tdefaultDate: new Date(),\n\tminuteIncrement: 1,\n\tonChange(selectedDates) {\n\t\tif (selectedDates[0] > new Date()) {\n\t\t\tchangeSelectorClass(btnStart, \"normal\");\n\t\t}\n\t\telse {\n\t\t\tchangeSelectorClass(btnStart, \"disabled\");\n\t\t};\n\t},\n\tonClose(selectedDates) {\n\t\tuserSelectedDate = selectedDates[0];\n\t\tif (selectedDates[0] <= new Date()) {\n\t\t\tiziToast.show({\n\t\t\t\tmessage: \"Please choose a date in the future\",\n\t\t\t\tmessageColor: 'white',\n\t\t\t\tcolor: '#ef4040',\n\t\t\t\tposition: 'topCenter',\n\t\t\t\ticonUrl: '/img/error.svg',\n\t\t\t});\n\t\t}\n\t},\n};\n\nflatpickr(\"#datetime-picker\", options);\n\nfunction changeSelectorClass(selector, type) {\n\n\t//console.log(selector, type);\n\tselector.classList.remove(...classTypes);\n\tselector.classList.add(type);\n}\n\nfunction addLeadingZero(value) {\n\treturn String(value).padStart(2, \"0\");\n}\n\nfunction stopTimerInterval() {\n\tif (intervalId) clearInterval(intervalId);\n\tif (timerId) clearTimeout(timerId);\n\n\tconst timeDelta = userSelectedDate - new Date();\n\n\tchangeSelectorClass(btnStop, \"disabled\");\n\tchangeSelectorClass(btnStart, timeDelta > 0 ? \"normal\" : \"disabled\");\n\tchangeSelectorClass(inputField, timeDelta > 0 ? \"normal\" : \"disabled\");\n\n\ttimerCounter.forEach(el => {\n\t\tel.textContent = \"00\";\n\t});\n\n}\n\nfunction convertMs(ms) {\n\t// Number of milliseconds per unit of time\n\tconst second = 1000;\n\tconst minute = second * 60;\n\tconst hour = minute * 60;\n\tconst day = hour * 24;\n\n\t// Remaining days\n\tconst days = Math.floor(ms / day);\n\t// Remaining hours\n\tconst hours = Math.floor((ms % day) / hour);\n\t// Remaining minutes\n\tconst minutes = Math.floor(((ms % day) % hour) / minute);\n\t// Remaining seconds\n\tconst seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n\treturn { days, hours, minutes, seconds };\n}\n\nbtnStart.addEventListener(\"click\", (e) => {\n\te.target.blur();\n\n\tchangeSelectorClass(btnStop, \"normal\");\n\tchangeSelectorClass(btnStart, \"disabled\");\n\tchangeSelectorClass(inputField, \"disabled\");\n\n\tconst timeDelta = userSelectedDate - new Date();\n\t//let timeToMs = convertMs(timeDelta);\n\t//console.log(timeDelta);\n\t//console.log(btnStop);\n\n\n\ttimerId = setTimeout(() => {\n\t\tchangeSelectorClass(btnStart, \"normal\");\n\t\tchangeSelectorClass(inputField, \"normal\");\n\n\t\tstopTimerInterval();\n\t}, timeDelta);\n\n\tintervalId = setInterval(() => {\n\t\tlet ticker = userSelectedDate - new Date();\n\t\tlet timeToMs = convertMs(ticker);\n\n\t\ttimerCounter.forEach(el => {\n\t\t\tconst keys = Object.keys(el.dataset);\n\t\t\tconst key = keys[0];\n\n\t\t\t//console.log(key);\n\t\t\t//console.log(el);\n\n\t\t\tif (timeToMs[key] !== undefined) {\n\t\t\t\tel.textContent = addLeadingZero(timeToMs[key]);\n\t\t\t}\n\t\t});\n\n\t}, 1000);\n\n});\n\nbtnStop.addEventListener(\"click\", (e) => {\n\te.target.blur();\n\tstopTimerInterval();\n});"],"names":["userSelectedDate","timerId","intervalId","btnStart","btnStop","inputField","timerCounter","classTypes","options","selectedDates","changeSelectorClass","iziToast","flatpickr","selector","type","addLeadingZero","value","stopTimerInterval","timeDelta","el","convertMs","ms","days","hours","minutes","seconds","ticker","timeToMs","key"],"mappings":"2FAMA,IAAIA,EAAmB,GACnBC,EACAC,EAEJ,MAAMC,EAAW,SAAS,cAAc,eAAe,EACjDC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,iBAAiB,QAAQ,EAEjDC,EAAa,CAAC,SAAU,UAAU,EAElCC,EAAU,CACf,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,SAASC,EAAe,CACnBA,EAAc,CAAC,EAAI,IAAI,KAC1BC,EAAoBP,EAAU,QAAQ,EAGtCO,EAAoBP,EAAU,UAAU,CAEzC,EACD,QAAQM,EAAe,CACtBT,EAAmBS,EAAc,CAAC,EAC9BA,EAAc,CAAC,GAAK,IAAI,MAC3BE,EAAS,KAAK,CACb,QAAS,qCACT,aAAc,QACd,MAAO,UACP,SAAU,YACV,QAAS,gBACb,CAAI,CAEF,CACF,EAEAC,EAAU,mBAAoBJ,CAAO,EAErC,SAASE,EAAoBG,EAAUC,EAAM,CAG5CD,EAAS,UAAU,OAAO,GAAGN,CAAU,EACvCM,EAAS,UAAU,IAAIC,CAAI,CAC5B,CAEA,SAASC,EAAeC,EAAO,CAC9B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACrC,CAEA,SAASC,GAAoB,CACxBf,GAAY,cAAcA,CAAU,EACpCD,GAAS,aAAaA,CAAO,EAEjC,MAAMiB,EAAYlB,EAAmB,IAAI,KAEzCU,EAAoBN,EAAS,UAAU,EACvCM,EAAoBP,EAAUe,EAAY,EAAI,SAAW,UAAU,EACnER,EAAoBL,EAAYa,EAAY,EAAI,SAAW,UAAU,EAErEZ,EAAa,QAAQa,GAAM,CAC1BA,EAAG,YAAc,IACnB,CAAE,CAEF,CAEA,SAASC,EAAUC,EAAI,CAQtB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CAEAtB,EAAS,iBAAiB,QAAU,GAAM,CACzC,EAAE,OAAO,OAETO,EAAoBN,EAAS,QAAQ,EACrCM,EAAoBP,EAAU,UAAU,EACxCO,EAAoBL,EAAY,UAAU,EAE1C,MAAMa,EAAYlB,EAAmB,IAAI,KAMzCC,EAAU,WAAW,IAAM,CAC1BS,EAAoBP,EAAU,QAAQ,EACtCO,EAAoBL,EAAY,QAAQ,EAExCY,GACA,EAAEC,CAAS,EAEZhB,EAAa,YAAY,IAAM,CAC9B,IAAIwB,EAAS1B,EAAmB,IAAI,KAChC2B,EAAWP,EAAUM,CAAM,EAE/BpB,EAAa,QAAQa,GAAM,CAE1B,MAAMS,EADO,OAAO,KAAKT,EAAG,OAAO,EAClB,CAAC,EAKdQ,EAASC,CAAG,IAAM,SACrBT,EAAG,YAAcJ,EAAeY,EAASC,CAAG,CAAC,EAEjD,CAAG,CAED,EAAE,GAAI,CAER,CAAC,EAEDxB,EAAQ,iBAAiB,QAAU,GAAM,CACxC,EAAE,OAAO,OACTa,GACD,CAAC"}